:root {
  --orange-color: #ffa500;
  --gray-color-border: #808080;
  --gray-color-background: #fafafa;
  --gray-color-grid: #fefefe;
  --header-height: 95px;
  --less-900-margins: 50px;
  --less-700-margins: 20px;
  --title-font-size: calc(20px + 1.5vw);
  --slow-transition: all 0.5s linear;
  --fast-transition: all 0.2s linear;
  --footer-height: 30px;
}

/* =============================================================================
- position is relative so I can place the footer at the bottom, using absolute. 
- it should be min-height of 100vh to accomodate a short page.
- by default, the browser sets some margin. I eliminate it. 
============================================================================= */
body {
  position: relative;
  min-height: 100vh;
  margin: 0;
  background-color: var(--gray-color-background);
}

/* =============================================================================
- sticky position is preferable over fixed since it keeps the element part of the flow. 
- width of the entire screen
- z-index will make it on top of any other element (the position property removes it from the normal flow.)
============================================================================= */
header {
  position: sticky;
  top: 0;
  background: linear-gradient(to right, orange, yellow);
  border-top: 1px solid var(--gray-color-border);
  border-bottom: 1px solid var(--gray-color-border);
  width: 100%;
  height: var(--header-height);
  z-index: 1;
}

/* This is an "invisble div". It's used to enlarge the area into which images can be dropped into
(to replace the header's image). Otherwise, the user would have to aim exactly at the circular image. */
header #dragged-into-div {
  position: absolute;
  top: 5px;
  left: 10%;
  width: 200px;
  height: 200px;
}

/* 
- The element is placed relative to it's containing container at 0,0.
- The border-radius makes the image round. 
- The image also has a border, but it's assigned by the javascript. */
header #dragged-into-div #header-img {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 125px;
  border-radius: 50%;
}

/* The header image would change it's style upon being dragged into to create a "hint" for the user. 
the img-hovered class is added and removed upon dragenter() dragleave() events. */
header #dragged-into-div #header-img.img-hovered {
  transition: var(--slow-transition);
  width: 150px;
  padding: 5px;
}

/* =============================================================================
- flex would allow me later on to arrange them vertically.
- margin-left:auto;  would push the element all the way to the right. 
- "auto" : taking up available space!!!!!!
- the 100% height would strech the div element to the height of its container.
============================================================================= */
header nav {
  position: absolute;
  right: 5%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

/* =============================================================================
For the top navigation menu anchors:
- no underline 
- font size depends on the viewport width (1.5vw) but would be at least 15px.
- I need to  use padding and not margin to show a gap with the border
- vertical line separator through border-right
============================================================================= */
header nav a {
  text-decoration: none;
  font-family: Oswald;
  font-weight: 100;
  font-size: var(--title-font-size);
  padding-left: 20px;
  padding-right: 20px;
  color: black;
  height: auto;
  border-right: 2px solid black;
}

header nav a:last-child {
  padding-right: 0px;
}

/* so the last menu entry doesn't have a vertical line */
header nav a:last-child {
  border-right: none;
}

header nav a:hover {
  color: #ff9900;
}

main {
  position: relative;
  text-align: center;
}

.middle-section {
  padding-bottom: calc(var(--footer-height) * 2);
}

/* font size depends on the viewport width */
main h1 {
  font-family: 'Big Shoulders Display';
  font-weight: 500;
  font-size: var(--title-font-size);
  margin-top: 15px;
  margin-bottom: 5px;
}

/* =============================================================================
about section : 3 parts (h1, div, h1) r orginized horizontally and centered.
============================================================================= */
#about-top-section {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  color: gray;
  margin-top: 30px;
  margin-bottom: 30px;
}

#about-top-section #img-div {
  position: relative;
}

#about-top-section #img-frame {
  width: 300px;
}

#about-top-section #img {
  position: absolute;
  top: 45px;
  left: 45px;
  width: 210px;
  animation-name: fade-in;
  animation-duration: 15s;
}

#about-top-section #title-left {
  width: 300px;
  animation: slide-in-right 5s ease-in-out;
}

#about-top-section #title-right {
  width: 300px;
  animation: slide-in-left 5s ease-in-out;
}

/* =============================================================================
animations for the elements. 
============================================================================= */
@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes slide-in-left {
  0% {
    opacity: 0;
    color: orange;
    transform: translateX(50%);
  }

  50% {
    color: orange;
    opacity: 0.1;
  }

  100% {
    opacity: 1;
    transform: translateX(0%);
  }
}

@keyframes slide-in-right {
  0% {
    opacity: 0;
    color: orange;
    transform: translateX(-50%);
  }

  50% {
    color: orange;
    opacity: 0.1;
  }

  100% {
    opacity: 1;
    transform: translateX(0%);
  }
}

#about-section div {
  display: grid;
  grid-gap: 25px;
  grid-template-columns: 1fr 4fr;
  width: 65vw;
  margin: auto;
  text-align: justify;
  text-justify: auto;
}

#about-section span.title {
  text-align: right;
  font-family: 'Big Shoulders Display';
  font-size: 2vw;
  border-top: 1px solid #ff7f50;
  margin-top: 3px;
}

#about-section span.content {
  font-family: calibri;
  font-weight: 300;
}

/* ul has a too large default margin. */
#about-section ul {
  margin: 0;
  padding-left: 30px;
  list-style-type: square;
}

/* ============================================================================= 
- customized ul element
- ul is a block element and so need to turn it into inline-block in order to center it. 
============================================================================= */
ul {
  list-style-type: none;
}

.news-about-ul {
  padding-left: 30px;
}

.news-about-ul .fa-circle {
  font-size: 40%;
  color: black;
  margin-right: 10px;
  vertical-align: middle;
  margin-top: -2px;
}

.news-about-ul li:last-child {
  font-style: italic;
}

.customed-ul {
  display: inline-block;
  text-align: left;
  margin: 0px;
}

.customed-ul>li {
  margin-bottom: 5px;
}

.customed-ul li .li-icon {
  font-size: 50%;
  color: orange;
  margin-right: 10px;
  vertical-align: middle;
  margin-top: -2px;
  text-shadow: 0px 0px 5px black;
  border: 1px solid gray;
  border-radius: 50%;
}

/*
#form-header .customed-ul li::before {
  font-family: 'FontAwesome';
  content: '\f111';
  color: orange;
  font-size: 50%;
  display: inline-block;
  text-shadow: 0px 0px 5px black;
  border: 1px solid gray;
  border-radius: 60%;
}
*/

/* =============================================================================
the grid
============================================================================= */
#spinner-div {
  height: 100vh;
  top: 100px;
}

#grid-section {
  margin-left: 10%;
  margin-right: 10%;
  font-family: calibri;
}

#grid-section > #title {
  font-size: 2vw;
}

#grid-section .mobileLi {
  display: none;
}

#select-option-div {
  display: inline-block;
  cursor: pointer;
}

#select-option-div select {
  padding: 2px;
  width: 150px;
  border-radius: .2em;
  font-size: 13px;
  background: linear-gradient(to bottom, #ffffff, orange);
  box-shadow: 1px 1px 4px #C0C0C0;
  outline: none;
}

/* I chose box-shadow rather then border manipulation to avoid "jitter" */
#select-option-div select:hover {
  box-shadow: 0 0 1px 1px var(--gray-color-border);
  cursor: pointer;
}

#select-option-div select option {
  background: #ffffcc;
}

#filter-input {
  width: 90px;
  height: 21px;
}

hr {
  margin-bottom: 20px;
  border-bottom: none;
}

/* =============================================================================
- grid-template-columns: auto-fit so the number of elems horizontally changes.
- fr unit is grid specifc. fraction. The item would grow and shrink basd on the available space.
- repeat function would repeat a pattern i.e. repeat(3, 1fr); instead of 1fr 1fr 1fr;
- auto-fit for responsiveness. Can be used with repeat() in order to avoid specifiying a fix number of columns. 
- minmax function defines the range i.e. from 320px to 1fr
- grid-gap would set gap between items 
- the grid determines the WIDTH of the img. Since the imgs are square the HEIGHT would equal the WIDTH.
============================================================================= */
.blurred {
  filter: blur(12px);
  transition: var(--fast-transition);
}

.un-blurred {
  filter: none;
  transition: var(--fast-transition);
}

.dynamic-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 2rem;
}

/* it's relative so the heart can be placed absolutely */
.grid-item {
  position: relative;
  background-color: var(--gray-color-grid);
  border: 1px solid black;
  font-size: 13px;
  text-align: center;
  margin: 0px;
  transition: all 0.3s ease-in;
}

.grid-item:hover {
  transition: var(--slow-transition);
  transform: scale(1.05);
  background-color: #ffa500;
  box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.33);
}

/* the img width would fit the parent (div) element 100% */
.grid-item .grid-image {
  width: 100%;
  border-bottom: 1px solid black;
}

/* initially the heart size is 15px. Onclick, it's animated to 20px and back twice */
.grid-item .heart {
  position: absolute;
  width: 15px;
  top: 5px;
  right: 5px;
}

.grid-item .animatedHeartBeat {
  animation: heartBeat;
  animation-duration: 1s;
  animation-iteration-count: 2;
  animation-timing-function: ease-out;
}

@keyframes heartBeat {
  from {
    width: 15px;
  }

  to {
    width: 25px;
  }
}

.grid-item figcaption {
  margin-bottom: 5px;
}

.heart-likes-icon {
  width: 11px;
}


/* =============================================================================
the modal
============================================================================= */
/* 
- initally it's hidden (display:none).
- blurring the rest of the viewport with background-color.
- z-index would place the modal on top when active. */
#modal-main-container-div {
  position: fixed;
  left: 0;
  top: 0;
  display: none;
  z-index: 1;
  width: 100%;
  height: 100%;
}

/* the button postion is in relati on to its container div - modal-cotainer-div */
#modal-main-container-div .nav-button {
  position: absolute;
  top: 50%;
  height: 30px;
  width: 100px;
  background-color: var(--orange-color);
  border: 1px solid black;
  font-size: 15px;
  font-weight: 400;
  font-family: calibri;
  outline: none;
}

#modal-main-container-div .button:hover {
  box-shadow: 1px 1px 4px black;
  font-weight: 600;
}

#modal-main-container-div #prev-btn {
  left: 10px;
}

#modal-main-container-div #next-btn {
  right: 10px;
}

/* - it's relative so the footer/caption can be placed absolutely. 
 - the top part is right underneath the header (its height + 2px for border); 
 - the width is determined in the Javascript based on the img propotions. */
#modal-sub-container-div {
  position: relative;
  top: calc(var(--header-height) + 1px);
  margin: auto;
  background-color: #fefefe;
  max-width: 75vw;
}

#modal-img-div {
  font-family: calibri;
  font-size: 13px;
}

/* Modal image should be the width of the containing div */
#modal-img-div > img {
  width: 100%;
}

/* the image's caption is placed a little over the bottom and centered. */
#modal-main-img-div .modal-img-caption {
  position: absolute;
  bottom: 7px;
}

#modal-main-img-div #modal-img-text {
  left: 25px;
}

#modal-main-img-div #modal-img-like-count {
  right: 25px;
}

/* The modal-img-close-btn Button */
.modal-img-close-btn {
  position: relative;
  right: 9px;
  color: var(--orange-color);
  float: right;
  font-size: 25px;
  font-weight: bold;
}

/* Change the close btn color and cursor */
.modal-img-close-btn:hover,
.modal-img-close-btn:focus {
  color: black;
  cursor: pointer;
}

/* I'm using the iframe-wrapper to create intrinsic ratios of the video.  
Intrinsic ratios allow elements to fill the width of their containing block and resize on the fly 
while maintaining their aspect ratio.  */
#iframe-wrapper {
  position: relative;
  width: 50vw;
  margin: 25px auto;
  padding-bottom: 28%;
  border: 2px solid gray;
}

/* the iframe takes 100% of the wrapping div */
#iframe-wrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#kitbull-section {
  display: inline-block;
  text-align: justify;
  text-justify: auto;
  width: 50vw;
  font-family: calibri;
  line-height: 25px;
  background-color: #f8f8f8;
}

#kitbull-section span {
  font-weight: 700;
}

/* The footer is placed at the bottom relative to its containing element (not the vp). 
  If line-height is the same figure as height, element would be centered vertically.
   */
footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  text-align: center;
  height: var(--footer-height);
  line-height: var(--footer-height);
  border-top: 1px solid var(--gray-color-border);
  background-color: #d3d3d3;
}

/* The 1st and last spans r styled 'italic' yet the divider char is not. */
footer span:first-child,
footer span:last-child {
  font-family: calibri;
  font-style: italic;
  font-size: 15px;
}

footer img {
  vertical-align: middle;
  width: 15px;
}

/* =============================================================================
fan form
============================================================================= */
#form-header {
  font-family: calibri;
  margin-bottom: 10px;
}

/* center the form on the page */
form {
  margin: auto;
  width: 400px;
  padding: 40px;
  border: 1px solid #cccccc;
  border-radius: 1em;
  background-color: #f8f8f8;
  font-family: calibri;
}

/* place some top margin for all div's except the 1st one */
form div+div {
  margin-top: 1em;
}

form .required {
  color: var(--orange-color);
}

/* since label is an inline element, using inline-block would allow specifying width */
form label {
  display: inline-block;
  width: 80px;
  text-align: right;
  margin-right: 3px;
}

form #phone-comment {
  margin-top: 0px;
  text-align: left;
}

form #phone-comment span {
  margin-left: 92px;
  font-style: italic;
  font-size: 13px;
  color: #aaaaaa;
}

form .dog-breed-disabled {
  color: transparent;
  text-shadow: #adadaa 0px 0px 3px;
}

form .dog-breed-enabled {
  color: black;
  text-shadow: none;
}

/* outline: none; removes the blue outline */
input[type=text],
input[type=email],
input[type=tel],
textarea {
  font: 1em calibri;
  width: 300px;
  padding-left: 5px;
  box-sizing: border-box;
  border: 1px solid #acacac;
  box-shadow: 1px 1px 4px #C0C0C0;
  outline: none;
}

#grid-section input {
  width: 90px;
}

/* since all other input element are 300px wide, here there r multiple inputs (radio btns) */
#radio-btns-div {
  display: inline-block;
  text-align: left;
  width: 300px;
}

/* additional highlight for focused elements */
input:focus,
textarea:focus {
  border: 1px solid #ffad33;
}

/* align textarea with the labels */
textarea {
  vertical-align: top;
  height: 5em;
}

/* center the submit button. Same size as the label elements */
form .button {
  text-align: center;
}

form button {
  height: 33px;
}

/* =============================================================================
media queries
============================================================================= */

/* the nav elements should be placed vertically and in the center */
@media screen and (max-width: 900px) {
  header {
    justify-content: center;
  }

  header #dragged-into-div {
    width: 150px;
  }

  header #dragged-into-div #header-img {
    width: 105px;
  }

  #about-section span.title {
    font-size: 18px;
  }

  #about-section div {
    grid-template-columns: 1fr 6fr;
    width: 70vw;
  }

  #iframe-wrapper {
    width: 75%;
    padding-bottom: 40%;
  }

  #kitbull-section {
    width: 75%;
  }
}

@media screen and (max-width: 700px) {
  header {
    height: 75px;
  }

  header #dragged-into-div {
    width: 125px;
    left: var(--less-700-margins);
  }

  header #dragged-into-div #header-img {
    width: 85px;
  }

  header nav {
    right: var(--less-700-margins);
  }

  header nav a {
    padding-left: 10px;
    padding-right: 10px;
  }

  #about-top-section {
    display: flex;
    flex-direction: column;
    margin-top: 10px;
    margin-bottom: 10px;
  }

  #about-section div {
    grid-template-columns: 1fr 8fr;
    width: 90vw;
  }

  #grid-section {
    margin-left: 5%;
    margin-right: 5%;
  }

  #modal-sub-container-div {
    width: 100vw;
    max-width: 100vw;
  }

  #modal-main-container-div .nav-button {
    width: 30px;
  }

  #modal-main-container-div .button-text {
    display: none;
  }

  #modal-main-container-div #prev-btn {
    left: 0;
  }

  #modal-main-container-div #next-btn {
    right: 0;
  }

  /* the two footer spans are split veritically */
  footer {
    height: calc(var(--footer-height) + 10px);
    line-height: calc(var(--footer-height) - 10px);
  }

  #footer-divider {
    visibility: hidden;
  }

  #footer-copyright {
    display: block;
  }


  #iframe-wrapper {
    width: 90%;
    padding-bottom: 50%;
  }

  #kitbull-section {
    width: 90%;
  }
}

@media screen and (max-width: 600px) {
  header nav a {
    font-size: calc(15px + 1.0vw);
    padding-left: 5px;
    padding-right:  5px;
  }

  /* removing all special hovering styles for small devices */
  .grid-item:hover {
    transition: none;
    transform: none;
    background-color: var(--gray-color-grid);
    box-shadow: none;
  }

  /* some of the grid's li elements should appear only on desktop or mobile */
  #grid-section .desktopLi {
    display: none;
  }

  #grid-section .mobileLi {
    display: block;
  }

  #form-header {
    width: 90vw;
  }

  ul.customed-ul {
    padding: 10px;
  }

  form {
    width: 90vw;
    padding: 30px 10px;
  }

  form div {
    text-align: left;
  }

  form label {
    text-align: left;
  }

  form #phone-comment span {
    margin-left: 0px;
  }

  footer {
    height: calc(var(--footer-height) + 30px);
  }
}