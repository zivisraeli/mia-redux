{"version":3,"sources":["images/heart-likes.png","images/img-frame.png","images/mia-about.jpg","images/footer-paw.png","images/heart-outline.png","images/heart-full.png","components/AboutHeader.js","components/AboutSection.js","components/Footer.js","components/About.js","Utils.js","components/HeaderImg.js","containers/HeaderImgWrapper.js","constants.js","components/SelfiesSortOptions.js","containers/SelfiesSortOptionsWrapper.js","components/SelfiesFilter.js","containers/SelfiesFilterWrapper.js","components/SelfiesHeader.js","gridItemsData.js","components/SelfiesGridItem.js","containers/SelfiesGridItemWrapper.js","components/SelfiesModalImg.js","containers/SelfiesModalImgWrapper.js","components/SelfiesSection.js","containers/SelfiesSectionWrapper.js","components/Selfies.js","containers/SelfiesWrapper.js","components/FansHeader.js","components/FansSection.js","containers/FansSectionWrapper.js","containers/FansWrapper.js","components/KitbullVideo.js","components/KitbullSection.js","containers/KitbullWrapper.js","App.js","reducers/mainReducer.js","index.js"],"names":["module","exports","AboutHeader","props","id","src","imgFrame","alt","miaAbout","AboutSection","className","href","target","rel","Footer","footerPawImg","About","Fragment","getCookie","name","value","document","cookie","match","setCookie","days","d","Date","setTime","getTime","toGMTString","HeaderImg","onDragOver","onDragEnter","onDragLeave","onDrop","onDragDrop","headerImgSrc","headerImgClassName","style","headerImgBorderStyle","onLoad","onHeaderImgLoaded","HeaderImgWrapper","this","headerImgId","border","React","Component","connect","state","dispatch","event","type","payload","preventDefault","relatedTargetId","relatedTarget","draggedImgId","dataTransfer","getData","imgId","SelfiesSortOptions","optMap","sortFilter","onChange","onSortChange","selectedIndex","selectedOptionId","SelfiesFilter","onFilterChange","SelfiesFilterWrapper","searchChangeHandler","console","log","toLowerCase","SelfiesHeader","class","GridItemData","caption","date","likeCount","isLiked","gridItems","data","SelfiesGridItem","ref","imgRef","onClick","onImgClick","onDragStart","onTouchStart","onTouchEnd","require","theHeartImg","theHeartImgClass","onHeartClick","SelfiesGridItemWrapper","itemId","parentElement","gridItem","find","setState","likeArray","likeCookie","JSON","parse","push","filteredArray","filter","stringify","updateLikesCookie","setData","changedTouches","theTouch","xDown","clientX","yDown","clientY","start_xDown","start_yDown","heartOutline","heartFull","key","endX","endY","startX","startY","diffX","Math","abs","diffY","touchedImgId","SelfiesModalImg","display","theModalImg","displayStyle","maxWidth","containerDivMaxWidth","onModalClosed","padding","overflowY","overflowX","height","modalImgHeight","onModalImgLoaded","heartLikesIcon","onModalPrevBtn","onModalNextBtn","SelfiesModalImgWrapper","onKeyDown","filteredGridItemsData","modalImgId","onModalImgLoadedEventHandler","imgW","naturalWidth","imgH","naturalHeight","imgW2h","vpW","documentElement","clientWidth","vpH","clientHeight","vpW2h","addEventListener","removeEventListener","modalImgIndex","map","item","indexOf","arrSrc","modalDisplayStyle","items","itemIndex","length","SelfiesSection","spinnerDisplay","blurEffect","visibility","gridVisibility","gridItemData","index","imgRefs","isModalOn","SelfiesSectionWrapper","createRef","observer","IntersectionObserver","entries","entry","threshold","arrOfPromises","forEach","Promise","resolve","reject","img","Image","all","then","values","onAllImgsLoaded","observe","current","err","includes","filterString","Selfies","SelfiesWrapper","readLikesCookie","gridElem","elem","FansHeader","FansSection","checkedYes","checkedNo","dogBreedLabelClass","dogBreedInputDisabled","dogBreedEnabled","formValuesObject","email","phone","owner","breed","comment","htmlFor","required","pattern","onDogBreedToggled","checked","disabled","validateFunc","formModalDisplayStyle","onFormModalEdit","FansSectionWrapper","form","validate","bind","reportValidity","elements","onFormConfirmed","action","method","FansWrapper","KitbullVideo","frameBorder","allow","title","allowFullScreen","KitbullSection","KitbullWrapper","App","menuClickEventHandler","currentMenuEntry","pathName","window","location","pathname","lastPathNameChar","charAt","contextPath","slice","startsWith","menuEntry","currentMenuEntryStyle","textShadow","to","path","exact","sortGridItems","sortAttr","sortDirection","sortedGridItems","sort","item1","item2","toUpperCase","sortOptionsChanged","sortValue","initialState","sortCookie","sortArr","readSortCookie","headerImgIdCookie","readHeaderImgCookie","store","createStore","Object","assign","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c93589c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart-likes.0fe46424.png\";","module.exports = __webpack_public_path__ + \"static/media/img-frame.8cce3f06.png\";","module.exports = __webpack_public_path__ + \"static/media/mia-about.ebc29d50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/footer-paw.26f2d9a5.png\";","module.exports = __webpack_public_path__ + \"static/media/heart-outline.a49ca95c.png\";","module.exports = __webpack_public_path__ + \"static/media/heart-full.0fe46424.png\";","import React from 'react';\r\n\r\nimport imgFrame from '../images/img-frame.png';\r\nimport miaAbout from '../images/mia-about.jpg';\r\n\r\nexport const AboutHeader = (props) => {\r\n  return (\r\n    <section id=\"about-top-section\">\r\n      <h1 id=\"title-left\">Hi there. <br/> I'm Mia.</h1>\r\n      <div id=\"img-div\">\r\n        <img src={imgFrame} alt=\"img-frame\" id=\"img-frame\"/>\r\n        <img src={miaAbout} alt=\"mia-about\" id=\"img\"/>\r\n      </div>\r\n      <h1 id=\"title-right\">And this site is <br/> all about me.</h1>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const AboutSection = (props) => {\r\n  return (\r\n    <section id=\"about-section\" className=\"middle-section\">\r\n      <div>\r\n        <span className='title'>About this site </span>\r\n        <span className='content'>My dad and I started this site while I was training to become a therapy dog. \"Therapy dogs are dogs that are used to bring comfort and joy to those who are ill or under poor conditions, such as those who have been affected by a natural disaster. Many people are able to connect with dogs and feel the love that they provide, and this has a therapeutic effect on them. Typically, they visit hospitals, schools, hospices, nursing homes and more.\" <br/>\r\n          Through this site, patients can keep in touch with me in-between our visits. I hope to forge closer relationships with the patients I’ll see on a regular basis.\r\n        </span>\r\n        <span className='title'>About me </span>\r\n        <span className='content'>\r\n          I was born Aug 6th, 2018. Not certain happened till I was 7 months old but at that point I was wandering the street of Silver Lake with my sister. We grabbed food from dumpster and whatever we found the street. In March we were found by volunteers from <a href=\"https://www.hopeforpaws.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Hope For Paws</a> who fed us, bathed us and treated us so humanely at <a href=\"https://veterinarycarecenter.com/\" target=\"_blank\" rel=\"noopener noreferrer\">The Veterinary Care Center</a> where I was also vaccinated and chipped. <br/>\r\n          Till a permanent home is found I was fostered by the <a href=\"https://www.facebook.com/PittyParty/\" target=\"_blank\" rel=\"noopener noreferrer\"> Pitties and Pals Rescue </a> organization. I was waiting patiently to get adopted. After a couple of weeks, Ziv showed up and the rest is history. At this point, my life changed forever, and I have the best life a bitch can wish for! I love the daily walk routines around my Jewish neighborhood, the hikes on Franklin and Runyon Canyons, and the visits to Pan Pacific Park, where I play with my best friends Blue, a deaf Pitbull, and the most playful German Pointer&nbsp;&nbsp;- Perla. \r\n        </span>\r\n        <span className='title'>Hobbies</span>\r\n        <span className='content'>My favorites ones are:\r\n          <ul>\r\n            <li>Chasing squirrels</li>\r\n            <li>Belly rub</li>\r\n            <li>Napping</li>\r\n            <li>Chasing balls</li>\r\n            <li>Running in circles</li>\r\n            <li>Licking my dad's face</li>\r\n          </ul>\r\n        </span>\r\n        <span className='title'>Am I Vicious?</span>\r\n        <span className='content'>\r\n          We, Pitbulls, do get a bad rap. But this is a stereotype, and nothing can be further from the truth! We are the friendliest and most dedicated companions you will ever find. We are just about the nicest dogs there are! I do get aggressive sometimes…when I need to be petted or my belly rubbed. But no physical harm ever takes place. At worst, you are covered with saliva from head to toe!\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React from 'react';\r\nimport footerPawImg from \"../images/footer-paw.png\";\r\n\r\nexport const Footer = (props) => {\r\n  return (\r\n    <footer>\r\n      <span>Disclaimer: This site is using cookies.</span>\r\n      <span id=\"footer-divider\">&nbsp;&nbsp;|&nbsp;&nbsp;</span>\r\n      <span id=\"footer-copyright\">COPYRIGHTS &copy; 2020 Mia Israeli All Rights Reserved.&nbsp;\r\n        <img src={footerPawImg} alt=\"footer-paw\" />\r\n      </span>\r\n    </footer>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { AboutHeader } from './AboutHeader';\r\nimport { AboutSection } from './AboutSection';\r\nimport { Footer } from './Footer';\r\n\r\nimport '../css/about.css';\r\n\r\nexport const About = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        <AboutHeader />\r\n        <AboutSection />\r\n      </main>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}","// =============================================================================\r\n// get cookie \r\n// =============================================================================\r\nexport const getCookie = (name) => {\r\n  // since document.cookie returns all cookie, match would filter out the one I need.\r\n  // the match regex: cookie name should follow an equal sign AND NOT a space of a semi-colon.\r\n  // with 'capturing groups' we get an array with the array[0] is the entire expression value.\r\n  // the rest of the values are the group's value.\r\n  let value = document.cookie.match('(?:^|;)\\\\s?' + name + '=([^\\\\s;]*)');\r\n  return value ? value[1] : null;\r\n}\r\n\r\n// =============================================================================\r\n// set cookie \r\n// =============================================================================\r\nexport const setCookie = (name, value, days = 365) => {\r\n  let d = new Date();\r\n  d.setTime(d.getTime() + 24 * 60 * 60 * 1000 * days);\r\n  document.cookie = name + \"=\" + value + \";path=/;expires=\" + d.toGMTString();\r\n}\r\n\r\nexport let globalModalImg = {};\r\n\r\n","import React from 'react';\r\n\r\nexport const HeaderImg = (props) => {\r\n  return (\r\n    <div id=\"dragged-into-div\" \r\n         onDragOver={props.onDragOver}\r\n         onDragEnter={props.onDragEnter}\r\n         onDragLeave={props.onDragLeave} \r\n         onDrop={props.onDragDrop} >                          \r\n      <img src={props.headerImgSrc} \r\n           id=\"header-img\" \r\n           className={props.headerImgClassName}\r\n           alt=\"header-img\"\r\n           style={props.headerImgBorderStyle}\r\n           onLoad={props.onHeaderImgLoaded} />\r\n    </div>);\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HEADER_IMG_LOADED, IMG_DRAG_ENTER, IMG_DRAG_LEAVE, IMG_DRAG_DROP } from '../constants';\r\n\r\nimport { setCookie } from '../Utils.js';\r\nimport { HeaderImg } from '../components/HeaderImg';\r\n\r\nexport class HeaderImgWrapper extends React.Component {\r\n\r\n  // =============================================================================\r\n  // The header's image is determined by the headerImgId cookie.\r\n  // It is read in the reducer during initialization.\r\n  // =============================================================================  \r\n  render() {\r\n    let headerImgSrc = `./images/mia-small-${this.props.headerImgId}.jpg`;\r\n\r\n    return (\r\n      <HeaderImg headerImgSrc={headerImgSrc}                 \r\n                 headerImgClassName={this.props.headerImgClassName} \r\n                 headerImgBorderStyle={{border: this.props.headerImgBorderStyle}} \r\n                 onHeaderImgLoaded={this.props.onHeaderImgLoaded} \r\n                 onDragOver={this.props.onDragOver}  \r\n                 onDragEnter={this.props.onDragEnter}\r\n                 onDragLeave={this.props.onDragLeave} \r\n                 onDragDrop={this.props.onDragDrop} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    headerImgBorderStyle: state.headerImgBorderStyle,\r\n    headerImgClassName: state.headerImgClassName,\r\n    headerImgId: state.headerImgId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // =============================================================================\r\n    // Without this feature the border will be drawn first as a straight line and then \r\n    // the image would appear.  \r\n    // And so, initally I draw no border. Only upon image loading I would add a border.\r\n    // =============================================================================\r\n    onHeaderImgLoaded: (event) => {\r\n      return dispatch({ type: HEADER_IMG_LOADED, payload: '1px solid black' });\r\n    },\r\n    // ============================================================================= \r\n    // By default, elements cannot be dropped into other elements. \r\n    // To allow a drop we must invoke preventDefault().\r\n    // ============================================================================= \r\n    onDragOver: (event) => {\r\n      event.preventDefault();\r\n    },\r\n    // ============================================================================= \r\n    // When a grid image is dragged into header-image, I re-style the header-image \r\n    // (enlarge it temporarily through a class name) to give the user a cue that the \r\n    // dragged image \"arrived at the destinaion\"\r\n    // ============================================================================= \r\n    onDragEnter: (event) => {\r\n      event.preventDefault();\r\n      return dispatch({\r\n        type: IMG_DRAG_ENTER,\r\n        payload: 'header-img img-hovered'\r\n      });\r\n    },\r\n    // ============================================================================= \r\n    // If the image is dragged outside the div BUT into the image (the image is inside the div)\r\n    // then it's still considered inside the div and therefore don't dispatch a new event.\r\n    // ============================================================================= \r\n    onDragLeave: (event) => {\r\n      let relatedTargetId = event.relatedTarget.id;\r\n      if (relatedTargetId !== 'header-img' && relatedTargetId !== 'dragged-into-div') {\r\n        return dispatch({\r\n          type: IMG_DRAG_LEAVE,\r\n          payload: 'header-img'\r\n        });\r\n      }\r\n    },\r\n    // ============================================================================= \r\n    // If the image is dragged outside the div BUT into the image (the image is inside the div)\r\n    // then it's still considered inside the div and therefore don't dispatch a new event.\r\n    // ============================================================================= \r\n    onDragDrop: (event) => {\r\n      event.preventDefault();\r\n      let draggedImgId = event.dataTransfer.getData('draggedImgId');\r\n      setCookie(\"headerImgId\", draggedImgId);\r\n      return dispatch({\r\n        type: IMG_DRAG_DROP,\r\n        payload: {\r\n          imgId: draggedImgId,\r\n          headerImgClassName: 'header-img'\r\n        }\r\n      });\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(HeaderImgWrapper);","// =============================================================================\r\n// action constants\r\n// =============================================================================\r\nexport const SORT_ORDER        = 'SORT-ORDER';\r\nexport const IMG_CLICK         = 'IMG_CLICK';\r\nexport const MODAL_CLOSED      = 'MODAL_CLOSED';\r\nexport const ALL_IMGS_LOADED   = 'ALL_IMGS_LOADED';\r\nexport const IMG_LIKE_TOGGLED  = 'IMG_LIKE_TOGGLED';\r\nexport const MODAL_NEXT_BTN    = 'MODAL_NEXT_BTN';\r\nexport const MODAL_PREV_BTN    = 'MODAL_PREV_BTN';\r\nexport const MODAL_IMG_LOADED  = 'MODAL_IMG_LOADED';\r\nexport const DOG_BREED_TOGGLED = 'DOG_BREED_TOGGLED';\r\nexport const HEADER_IMG_LOADED = 'HEADER_IMG_LOADED';\r\nexport const IMG_DRAG_ENTER    = 'IMG_DRAG_ENTER';\r\nexport const IMG_DRAG_LEAVE    = 'IMG_DRAG_LEAVE';\r\nexport const IMG_DRAG_DROP     = 'IMG_DRAG_DROP';\r\nexport const FILTER_CHANGED    = 'FILTER_CHANGED';\r\nexport const IMG_TOUCH_END     = 'IMG_TOUCH_END';\r\nexport const FORM_CONFIRMED    = 'FORM_CONFIRMED';\r\nexport const FORM_MODAL_EDIT   = 'FORM_MODAL_EDIT';","import React from 'react';\r\n\r\n// =============================================================================\r\n// Since SelfiesSortOptionsPresentation is now split from Redux, it contains no state relate code.\r\n// As such I don't need it to be a \"heavy-weight\" React component but rather a stateless functional component.\r\n// =============================================================================\r\nexport const SelfiesSortOptions = (props) => {\r\n  let optMap = {\r\n    'likes+1': 'Like number; Asc.',\r\n    'likes-1': 'Like number; Desc.',\r\n    'captions+1': 'Caption; Asc.',\r\n    'captions-1': 'Caption; Desc.',\r\n  }\r\n\r\n  return (<div id=\"select-option-div\" >\r\n            <select id=\"select-sort\" \r\n                    value={optMap[props.sortFilter]} \r\n                    onChange={props.onSortChange}>\r\n              <option id=\"likes+1\">{optMap['likes+1']}</option>\r\n              <option id=\"likes-1\">{optMap['likes-1']}</option>\r\n              <option id=\"captions+1\">{optMap['captions+1']}</option>\r\n              <option id=\"captions-1\">{optMap['captions-1']}</option>\r\n            </select>\r\n          </div>);\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setCookie } from '../Utils.js';\r\nimport { SORT_ORDER } from '../constants';\r\nimport { SelfiesSortOptions } from '../components/SelfiesSortOptions'\r\n\r\nexport class SelfiesSortOptionsWrapper extends React.Component {\r\n  render() {\r\n    return (<SelfiesSortOptions sortFilter={this.props.sortFilter} \r\n                                onSortChange={this.props.onSortChange} />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sortFilter: state.sortFilter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSortChange: (event) => {\r\n      let selectedIndex = event.target.selectedIndex;\r\n      let selectedOptionId = event.target[selectedIndex].id;\r\n      setCookie('sort', selectedOptionId);\r\n      return dispatch({\r\n        type: SORT_ORDER,\r\n        payload: selectedOptionId\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(SelfiesSortOptions);","import React from 'react';\r\n\r\nexport const SelfiesFilter = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <input id=\"filter-input\" type=\"text\"\r\n                    onChange={props.onFilterChange} />\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SelfiesFilter } from '../components/SelfiesFilter';\r\n\r\nimport { FILTER_CHANGED } from '../constants';\r\n\r\n// =============================================================================\r\n// - Upon having a new filter we need to render the entire SelfiesSection therefore\r\n//   SelfiesSectionWrapper listens to changes of the filterString state.\r\n// - When we dispatch FILTER_CHANGED action, the reducer will update the filterString value.\r\n// - As a result SelfiesSectionWrapper will be rendered.\r\n// =============================================================================\r\nexport class SelfiesFilterWrapper extends React.Component {\r\n  searchChangeHandler = (event) => {\r\n    console.log(event.target.value.toLowerCase())\r\n  }\r\n\r\n  render() {\r\n    return ( <SelfiesFilter onFilterChange={this.props.onFilterChange} /> );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFilterChange: (event) => {\r\n      return dispatch({ \r\n        type: FILTER_CHANGED, \r\n        payload: event.target.value.toLowerCase() \r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(SelfiesFilterWrapper);","import React from 'react';\r\n\r\nimport SelfiesSortOptionsWrapper from '../containers/SelfiesSortOptionsWrapper';\r\nimport SelfiesFilterWrapper from '../containers/SelfiesFilterWrapper';\r\n\r\n// =============================================================================  \r\n// The 'swipe' instructions will be invisible on a desktop but visible on a mobile device.\r\n// The 'click' and 'drag' instruction will be the other way around.\r\n// =============================================================================  \r\nexport const SelfiesHeader = (props) => {\r\n  return (\r\n    <section>\r\n\t      <h1>Some of my best selfies!</h1>\r\n\t      <ul className=\"customed-ul\">\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>\r\n\t          Sort Images By: <SelfiesSortOptionsWrapper />        \r\n\t        </li>\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>\r\n\t           Filter Images By Caption: <SelfiesFilterWrapper />\r\n\t        </li>\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>Click on the image for a full image view.</li>\r\n\t        <li className=\"desktopLi\"><i class=\"fa fa-circle li-icon\"></i>Click on the heart icon to like the image!</li>\r\n\t        <li className=\"desktopLi\"><i class=\"fa fa-circle li-icon\"></i>Drag an image to the header and persist it.</li>\r\n\t        <li className=\"mobileLi\"><i class=\"fa fa-circle li-icon\"></i>Swipe to the right to like the image!</li>\r\n\t        <li className=\"mobileLi\"><i class=\"fa fa-circle li-icon\"></i>Swipe to the left to replace the header's image.</li>\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>Your choices are permanently stored on your local device.</li>\r\n\t      </ul>\r\n\t      <hr/>\r\n      </section>\r\n  );\r\n}","class ItemData {\r\n  constructor(id) {\r\n    this.id = id;\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// GridItemData extends ItemData just for the purpose of exercising inheritance...\r\n// =============================================================================\r\nexport class GridItemData extends ItemData {\r\n  constructor(id, src, caption, date, likeCount, isLiked) {\r\n    super(id);\r\n    this.src = src;\r\n    this.caption = caption;\r\n    this.date = date;\r\n    this.likeCount = likeCount;\r\n    this.isLiked = isLiked;\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// I created gridItems and data as separate entities since gridItems itself can't be\r\n//  modified upon sorting since it's an imported element.\r\n// =============================================================================\r\nexport const gridItems = {};\r\n\r\ngridItems.data = [\r\n  new GridItemData(\"id00\", \"./images/mia-small-id00.jpg\", \"First Shower I\", \"04/18/2019\", 35, false),\r\n  new GridItemData(\"id01\", \"./images/mia-small-id01.jpg\", \"Daddy Ziv I\", \"05/06/2019\", 23, false),\r\n  new GridItemData(\"id02\", \"./images/mia-small-id02.jpg\", \"Me, Pretty\", \"10/02/2019\", 5, false),\r\n  new GridItemData(\"id03\", \"./images/mia-small-id03.jpg\", \"Destructive Me I\", \"04/30/2019\", 17, false),\r\n  new GridItemData(\"id04\", \"./images/mia-small-id04.jpg\", \"Daddy Ami II\", \"09/18/2019\", 19, false),\r\n  new GridItemData(\"id05\", \"./images/mia-small-id05.jpg\", \"Fryman Canyon Trail I\", \"07/13/2019\", 5, false),\r\n  new GridItemData(\"id06\", \"./images/mia-small-id06.jpg\", \"Chucky/Serial Killer I\", \"10/31/2019\", 5, false),\r\n  new GridItemData(\"id07\", \"./images/mia-small-id07.jpg\", \"Chucky/Serial Killer II\", \"10/31/2019\", 5, false),\r\n  new GridItemData(\"id08\", \"./images/mia-small-id08.jpg\", \"With Blue\", \"10/03/2019\", 15, false),\r\n  new GridItemData(\"id09\", \"./images/mia-small-id09.jpg\", \"Runyon Canyon I\", \"09/01/2019\", 21, false),\r\n  new GridItemData(\"id10\", \"./images/mia-small-id10.jpg\", \"Daddy Ziv III\", \"09/18/2019\", 33, false),\r\n  new GridItemData(\"id11\", \"./images/mia-small-id11.jpg\", \"Fryman Canyon Trail II\", \"07/13/2019\", 17, false),\r\n  new GridItemData(\"id12\", \"./images/mia-small-id12.jpg\", \"Napping II\", \"09/18/2019\", 15, false),\r\n  new GridItemData(\"id13\", \"./images/mia-small-id13.jpg\", \"Catnap I\", \"08/23/2019\", 21, false),\r\n  new GridItemData(\"id14\", \"./images/mia-small-id14.jpg\", \"Fryman Canyon Trail III\", \"07/13/2019\", 25, false),\r\n  new GridItemData(\"id15\", \"./images/mia-small-id15.jpg\", \"Fryman Canyon Trail IV\", \"07/13/2019\", 17, false),\r\n  new GridItemData(\"id16\", \"./images/mia-small-id16.jpg\", \"Daddy Ziv IV\", \"09/02/2019\", 15, false),\r\n  new GridItemData(\"id17\", \"./images/mia-small-id17.jpg\", \"Catnap II\", \"07/11/2019\", 25, false),\r\n  new GridItemData(\"id18\", \"./images/mia-small-id18.jpg\", \"Catnap III\", \"07/11/2019\", 5, false),\r\n  new GridItemData(\"id19\", \"./images/mia-small-id19.jpg\", \"Life Is Good\", \"08/12/2019\", 17, false),\r\n  new GridItemData(\"id20\", \"./images/mia-small-id20.jpg\", \"Destructive Me II\", \"05/18/2019\", 2, false),\r\n  new GridItemData(\"id21\", \"./images/mia-small-id21.jpg\", \"Daddy Ziv II\", \"08/14/2019\", 5, false),\r\n  new GridItemData(\"id22\", \"./images/mia-small-id22.jpg\", \"With Marc I\", \"06/06/2019\", 21, false),\r\n  new GridItemData(\"id24\", \"./images/mia-small-id24.jpg\", \"With Marc II\", \"06/12/2019\", 15, false),\r\n  new GridItemData(\"id25\", \"./images/mia-small-id25.jpg\", \"Destruction\", \"07/21/2019\", 21, false),\r\n  new GridItemData(\"id26\", \"./images/mia-small-id26.jpg\", \"Daddy Ami I\", \"08/01/2019\", 31, false),\r\n  new GridItemData(\"id27\", \"./images/mia-small-id27.jpg\", \"Napping I\", \"07/19/2019\", 5, false),\r\n  new GridItemData(\"id28\", \"./images/mia-small-id28.jpg\", \"Destructive Me III\", \"07/19/2019\", 5, false),\r\n  new GridItemData(\"id29\", \"./images/mia-small-id29.jpg\", \"With Daphna\", \"09/01/2019\", 12, false),\r\n  new GridItemData(\"id30\", \"./images/mia-small-id30.jpg\", \"Head Licking\", \"06/17/2019\", 15, false),\r\n  new GridItemData(\"id31\", \"./images/mia-small-id31.jpg\", \"First Shower II\", \"04/18/2019\", 21, false),\r\n  new GridItemData(\"id32\", \"./images/mia-small-id32.jpg\", \"Play Time\", \"09/09/2019\", 15, false),\r\n  new GridItemData(\"id33\", \"./images/mia-small-id33.jpg\", \"Napping III\", \"11/02/2019\", 45, false),\r\n  new GridItemData(\"id34\", \"./images/mia-small-id34.jpg\", \"Napping IV\", \"11/11/2019\", 9, false),\r\n  new GridItemData(\"id35\", \"./images/mia-small-id35.jpg\", \"Playing I\", \"01/09/2020\", 12, false),\r\n  new GridItemData(\"id36\", \"./images/mia-small-id36.jpg\", \"Playing II\", \"01/09/2020\", 21, false),\r\n  new GridItemData(\"id37\", \"./images/mia-small-id37.jpg\", \"Playing III\", \"01/09/2020\", 9, false),\r\n  new GridItemData(\"id38\", \"./images/mia-small-id38.jpg\", \"Basking In The Sun I\", \"02/01/2020\", 12, false),\r\n  new GridItemData(\"id39\", \"./images/mia-small-id39.jpg\", \"Basking In The Sun II\", \"01/29/2020\", 19, false)\r\n];","import React from 'react';\r\n\r\nexport const SelfiesGridItem = (props) => {\r\n  return (\r\n    <figure id={props.id} className=\"grid-item\" ref={props.imgRef}>\r\n      <img src={props.src} \r\n           className=\"grid-image\"\r\n           alt={props.id} \r\n           onClick={props.onImgClick}           \r\n           onDragStart={props.onDragStart}\r\n           onTouchStart={props.onTouchStart}\r\n           onTouchEnd={props.onTouchEnd} />\r\n      <figcaption className=\"figcaption\">\r\n                 {props.caption}&nbsp;|&nbsp;\r\n      <span id=\"like-count-span\">{props.likeCount}</span>&nbsp;\r\n      <img src={require(\"../images/heart-likes.png\")} \r\n           className=\"heart-likes-icon\" \r\n          alt=\"heart-likes\"/>'s&nbsp;|&nbsp;\r\n      {props.date}&nbsp;\r\n    </figcaption>\r\n    <img src={props.theHeartImg} \r\n         className={props.theHeartImgClass} \r\n         alt=\"heart-like\" \r\n         onClick={props.onHeartClick} />\r\n    </figure>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { gridItems } from '../gridItemsData';\r\nimport { getCookie, setCookie } from '../Utils.js';\r\nimport { IMG_CLICK, IMG_TOUCH_END } from '../constants';\r\nimport { SelfiesGridItem } from '../components/SelfiesGridItem';\r\nimport heartOutline from '../images/heart-outline.png';\r\nimport heartFull from '../images/heart-full.png';\r\n\r\nexport class SelfiesGridItemWrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // =============================================================================\r\n    // For that component only I keep using local component state since this particular \r\n    // item knows to re-render itself upon clicking on the heart image (liking).\r\n    // =============================================================================\r\n    this.state = {\r\n      isLiked: this.props.isLiked,\r\n      likeCount: this.props.likeCount\r\n    };\r\n  }\r\n\r\n  // =============================================================================\r\n  // - the method is invoked upon:\r\n  //   1. heart icon is clicked (click event on desktop)\r\n  //   2. user swaped to the right (touch event on mobile)\r\n  // - The heart image doesn't carry an id, but its parent does.\r\n  // - The id is used to find the actual grid-item element from the list.\r\n  // - Once the grid-item element is found, I manipulates the like values:\r\n  //   * toggle the isLiked value.\r\n  //   - increment/decrement the likeCount.\r\n  //   - set the states values which during rendering r used to determine \r\n  //     the proper icon and count number. \r\n  //   - update the likes cookie.\r\n  // =============================================================================\r\n  onHeartClick = (event) => {\r\n    let itemId = event.target.parentElement.id;\r\n    let gridItem = gridItems.data.find((gridItem) => {\r\n      return gridItem.id === itemId;\r\n    });\r\n\r\n    if (gridItem.isLiked) {\r\n      gridItem.isLiked = false;\r\n      gridItem.likeCount--;\r\n    } else {\r\n      gridItem.isLiked = true;\r\n      gridItem.likeCount++;\r\n    }\r\n    this.setState({\r\n      isLiked: gridItem.isLiked,\r\n      likeCount: gridItem.likeCount\r\n    });\r\n\r\n    updateLikesCookie();\r\n\r\n    // =============================================================================\r\n    // - get 'likes' cookie (a string-ed array)\r\n    // - if not empty, JSON-parse it to convert the string to an array. \r\n    // - push or remove (filter) an element based on gridItem.isLiked value.\r\n    // - JSON-stringify it to convert the array to a string. \r\n    // - set the cookie with the new string.\r\n    // =============================================================================\r\n    function updateLikesCookie() {\r\n      let likeArray = [];\r\n      let likeCookie = getCookie('likes');\r\n      if (likeCookie != null) {\r\n        likeArray = JSON.parse(likeCookie);\r\n      }\r\n      if (gridItem.isLiked) {\r\n        likeArray.push(gridItem.id);\r\n      } else {\r\n        let filteredArray = likeArray.filter((id) => {\r\n          return id !== gridItem.id;\r\n        });\r\n        likeArray = filteredArray;\r\n      }\r\n\r\n      likeCookie = JSON.stringify(likeArray);\r\n      setCookie('likes', likeCookie);\r\n    }\r\n  }\r\n\r\n  // =============================================================================\r\n  // when the drag starts I don't need to dispatch any action. I just add the draggedImgId\r\n  // to the event. this infomation stays with the event and can be retrieved later-on\r\n  // upon onDragDrop (in HeaderImgWrapper).\r\n  // =============================================================================\r\n  onDragStart = (event) => {\r\n    let draggedImgId = event.target.alt;\r\n    event.dataTransfer.setData('draggedImgId', draggedImgId);\r\n  }\r\n\r\n  // =============================================================================\r\n  // here i'm using a trick used the drag events. i'm adding data to event \r\n  // (initial x,y values) through a made-up property - dataTransfer.\r\n  // this data will be later retrieved upon touchEnd event. \r\n  // =============================================================================\r\n  onTouchStart = (event) => {\r\n    console.log(event.changedTouches[0]);\r\n    let theTouch = event.changedTouches[0];\r\n    let xDown = theTouch.clientX;\r\n    let yDown = theTouch.clientY;\r\n    event.dataTransfer = { start_xDown: xDown, start_yDown: yDown }\r\n  }\r\n\r\n  render() {\r\n    let theHeartImg = heartOutline;\r\n    let theHeartImgClass = 'heart';\r\n    if (this.state.isLiked) {\r\n      theHeartImg = heartFull;\r\n      theHeartImgClass = 'heart animatedHeartBeat';\r\n    }\r\n\r\n    // =============================================================================\r\n    // - there are 3 types of events here:\r\n    //   1. those that can be processed locally such as onDragStart(), onTouchStart(), etc\r\n    //   2. those that need to dispatch an action to notify other components such as onImgClick().\r\n    //   3. those that need both local and dispatch handling such as onTouchEnd().\r\n    // onTouchEnd - when a touch event happens it means either:\r\n    //   - like-count need to change if swipe to the right. in which case it can be handled \r\n    //     locally by onHeartClick()\r\n    //   - header-img need to change if swipe to the left. in which case an action needs to \r\n    //     be dispatched since it's handled by other components.\r\n    //  for the local handling case there is a bit of an issue. since onTouchEnd can't simply\r\n    //  call onHeartClick(). I therefore pass it through the onTouchEnd property.\r\n    // =============================================================================\r\n    return (\r\n      <SelfiesGridItem id={this.props.id} \r\n                       src={this.props.src}\r\n                       caption={this.props.caption}\r\n                       date={this.props.date}\r\n                       isLiked={this.state.isLiked}\r\n                       likeCount={this.state.likeCount}                    \r\n                       onHeartClick={this.onHeartClick} \r\n                       onImgClick={this.props.onImgClick}\r\n                       onDragStart={this.onDragStart}\r\n                       onTouchStart={this.onTouchStart}                      \r\n                       onTouchEnd={(event) => this.props.onTouchEnd(event, this.onHeartClick)}\r\n                       theHeartImg={theHeartImg}\r\n                       theHeartImgClass={theHeartImgClass}\r\n                       key={this.props.id}\r\n                       imgRef={this.props.imgRef}/>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onImgClick: (event) => {\r\n      let itemId = event.target.parentElement.id;\r\n      return dispatch({\r\n        type: IMG_CLICK,\r\n        payload: itemId\r\n      });\r\n    },\r\n    onTouchEnd: (event, onHeartClick) => {\r\n      let theTouch = event.changedTouches[0];\r\n      let endX = theTouch.clientX;\r\n      let endY = theTouch.clientY;\r\n      let startX = event.dataTransfer.start_xDown;\r\n      let startY = event.dataTransfer.start_yDown;\r\n      let diffX = Math.abs(startX - endX);\r\n      let diffY = Math.abs(startY - endY);\r\n      if ((diffX > 25) && (diffY < 25)) {\r\n        if (endX > startX) {\r\n          onHeartClick(theTouch);\r\n        } else {\r\n          let touchedImgId = theTouch.target.parentElement.id;\r\n          setCookie(\"headerImgId\", touchedImgId);\r\n          return dispatch({\r\n            type: IMG_TOUCH_END,\r\n            payload: {\r\n              imgId: touchedImgId,\r\n              headerImgClassName: 'header-img'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(SelfiesGridItemWrapper);","import React from 'react';\r\n\r\nimport heartLikesIcon from '../images/heart-likes.png';\r\n\r\nexport const SelfiesModalImg = (props) => {\r\n  // =============================================================================\r\n  // The divs:\r\n  // 1. modal-main-container-div\r\n  //   - it covers the ENTIRE viewport (w:100%, h:100%). \r\n  //   - it contains 3 elements: 2 buttons (prev, next) and a modal-sub-container-div in between.\r\n  //   - its position is *fixed* on left:1, top:1 (relative to the viewport).\r\n  //   - it's the main container that is visible or none.\r\n  //   - it carries the value z-index:1 meaning it's in the front of the grid. \r\n  //   - (the grid itself is rendered blurred)\r\n  // 2. modal-sub-container-div\r\n  //    - its width is 75% of the viewport width (75vw) and it's centered (margin:auto).\r\n  //    - it contains 2 elements: the close button and the image div. \r\n  //    - its position is *relative* & starts below the header (based on the header's height+1)\r\n  //    - its background color is #fefefe which is slighty different then the grid background. \r\n  // 3. modal-main-img-div\r\n  //    - it covers the entire containing div i.e. 75% of the view port. \r\n  //    - it contains 3 elements: the main img div, the caption and like count.\r\n  //    - it has a border and has paddings to \"frame\" the image.  \r\n  // 4. modal-img-div\r\n  //    - contains the img\r\n  //    - contains the scroll due to overflowY: 'auto'\r\n  // ============================================================================= \r\n  return (\r\n    <div id=\"modal-main-container-div\" style={{display: props.theModalImg.displayStyle}}>\r\n      <div id=\"modal-sub-container-div\" style={{maxWidth: props.containerDivMaxWidth}}>\r\n        <span className=\"modal-img-close-btn\" onClick={props.onModalClosed}>&times;</span>\r\n        <div id=\"modal-main-img-div\" style={{padding:'25px 25px 25px 25px', border: '1px solid black'}}>\r\n          <div id=\"modal-img-div\" style={{overflowY: 'auto',  overflowX: 'hidden', height: props.modalImgHeight}}>                                         \r\n            <img src={props.theModalImg.src} \r\n                 alt=\"Mia's i-m-g\"                 \r\n                 onLoad={props.onModalImgLoaded}/>           \r\n          </div>\r\n          <span id=\"modal-img-text\" className=\"modal-img-caption\">{props.theModalImg.caption}</span>\r\n          <span id=\"modal-img-like-count\" className=\"modal-img-caption\">\r\n            {props.theModalImg.likeCount} <img src={heartLikesIcon} className=\"heart-likes-icon\" alt=\"like-count\"/>'s\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <button id=\"prev-btn\" \r\n              className=\"nav-button\"\r\n              onClick={props.onModalPrevBtn}>\r\n        <i className=\"fa fa-arrow-circle-left\"></i>\r\n        <span className=\"button-text\">&nbsp;&nbsp;Previous</span>\r\n      </button>\r\n      <button id=\"next-btn\" \r\n              className=\"nav-button\" \r\n              onClick={props.onModalNextBtn}>\r\n        <span className=\"button-text\">Next&nbsp;&nbsp;</span>\r\n        <i className=\"fa fa-arrow-circle-right\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { gridItems } from '../gridItemsData';\r\nimport {\r\n  MODAL_NEXT_BTN,\r\n  MODAL_PREV_BTN,\r\n  MODAL_IMG_LOADED,\r\n  MODAL_CLOSED\r\n} from '../constants';\r\nimport { SelfiesModalImg } from '../components/SelfiesModalImg';\r\n\r\nexport class SelfiesModalImgWrapper extends React.Component {\r\n  modalImgHeight = null;\r\n  containerDivMaxWidth = null;\r\n\r\n  // =============================================================================\r\n  // Navigating left & right through the modal images can be done:\r\n  //   * through the left & right btn-images\r\n  //   * through the left & right keyboard's keys. \r\n  // For the btn-images I'm passing onModalPrevBtn & onModalNextBtn properties.\r\n  // For the keyboard's key I'm listening to keydown events. \r\n  // =============================================================================\r\n  onKeyDown = (event) => {\r\n    let filteredGridItemsData = this.props.filteredGridItemsData;\r\n    let modalImgId = this.props.modalImgId;\r\n    if (event.key === \"ArrowRight\")\r\n      this.props.onModalNextBtn(filteredGridItemsData, modalImgId);\r\n    else if (event.key === \"ArrowLeft\")\r\n      this.props.onModalPrevBtn(filteredGridItemsData, modalImgId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.onKeyDown);\r\n  }\r\n\r\n  // =============================================================================\r\n  // The img width is always 75% of the viewport.\r\n  // However I need to determine the height.\r\n  // - I find the width/height ration of the img and the width/height ratio of the viewport.\r\n  // - if it's wider img, I don't try to set the height.\r\n  // - otherwise, the height would be equal to the width.\r\n  // =============================================================================\r\n  onModalImgLoadedEventHandler = (event) => {\r\n    let imgW = event.target.naturalWidth;\r\n    let imgH = event.target.naturalHeight;\r\n    let imgW2h = imgW / imgH;\r\n\r\n    let vpW = document.documentElement.clientWidth;\r\n    let vpH = document.documentElement.clientHeight - 149;\r\n    if (imgW < (document.documentElement.clientWidth * 0.65)) {\r\n      this.containerDivMaxWidth = '50vw';\r\n      vpW = vpW * 0.5;\r\n    } else {\r\n      if (vpW < 700) {\r\n        this.containerDivMaxWidth = '100vw';\r\n      } else {\r\n        this.containerDivMaxWidth = '75vw';\r\n        vpW = vpW * 0.75;\r\n      }\r\n    }\r\n\r\n    let vpW2h = vpW / vpH;\r\n\r\n    // For a wide image or for image where height is smaller then the viewport's height - \r\n    // don't specify height.\r\n    if (imgW2h > vpW2h || (imgH < vpH)) {\r\n      this.modalImgHeight = '';\r\n    } else {\r\n      this.modalImgHeight = vpH;\r\n    }\r\n\r\n    // This callback will render the image visible ('block')\r\n    this.props.onModalImgLoaded();\r\n  }\r\n\r\n  render() {\r\n    let modalImgIndex = gridItems.data.map((item) => { return item.id; }).indexOf(this.props.modalImgId);\r\n    let gridItem = gridItems.data[modalImgIndex];\r\n\r\n    let arrSrc = gridItem.src.match('(.*mia-).*-(.*)(.jpg$)');\r\n    let theModalImg = {};\r\n    theModalImg.src = arrSrc[1] + arrSrc[2] + arrSrc[3];\r\n    theModalImg.caption = gridItem.caption;\r\n    theModalImg.likeCount = gridItem.likeCount;\r\n    theModalImg.displayStyle = this.props.modalDisplayStyle;\r\n\r\n    // =============================================================================\r\n    // Two main properties are passed down to SelfiesModalImg through the prev/next callback\r\n    // functions. When the dispatch methods (listed in mapDispatchToProps)\r\n    // are invoked, they will be invoked with this 2 parameters. \r\n    // - filteredGridItemsData - is passed to this component from SelfiesSectionWrapper where it's created.\r\n    //   it is necessary in order to determine the next/prev image.\r\n    // - modalImgId - is passed from the store (mapStateToProps).\r\n    //   it is necessary in order to to determine its index and therefore the next/prev image index.\r\n    //\r\n    // This complexity could be avoided had I decided to put the logic in the reducer. However, \r\n    // I would rather have this logic in the related component.\r\n    // =============================================================================\r\n    let filteredGridItemsData = this.props.filteredGridItemsData;\r\n    let modalImgId = this.props.modalImgId;\r\n    return (\r\n      <SelfiesModalImg onModalImgLoaded={this.onModalImgLoadedEventHandler}\r\n                       onModalPrevBtn={() => this.props.onModalPrevBtn(filteredGridItemsData, modalImgId)}\r\n                       onModalNextBtn={() => this.props.onModalNextBtn(filteredGridItemsData, modalImgId)}\r\n                       onModalClosed={this.props.onModalClosed}\r\n                       theModalImg={theModalImg}\r\n                       containerDivMaxWidth={this.containerDivMaxWidth}\r\n                       modalImgHeight={this.modalImgHeight} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n  return {\r\n    modalImgId: state.modalImgId,\r\n    modalDisplayStyle: state.modalDisplayStyle\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onModalPrevBtn: (filteredGridItemsData, modalImgId) => {\r\n      let items = filteredGridItemsData;\r\n      let itemIndex = items.map((item) => { return item.id; }).indexOf(modalImgId);\r\n      itemIndex = itemIndex === 0 ? items.length - 1 : itemIndex - 1;\r\n      modalImgId = items[itemIndex].id;\r\n\r\n      return dispatch({\r\n        type: MODAL_PREV_BTN,\r\n        payload: {\r\n          modalImgId: modalImgId,\r\n          modalDisplayStyle: 'none'\r\n        }\r\n      });\r\n    },\r\n    onModalNextBtn: (filteredGridItemsData, modalImgId) => {\r\n      let items = filteredGridItemsData;\r\n      let itemIndex = items.map((item) => { return item.id; }).indexOf(modalImgId);\r\n      itemIndex = (itemIndex + 1) === items.length ? 0 : itemIndex + 1;\r\n      modalImgId = items[itemIndex].id;\r\n\r\n      return dispatch({\r\n        type: MODAL_NEXT_BTN,\r\n        payload: {\r\n          modalImgId: modalImgId,\r\n          modalDisplayStyle: 'none'\r\n        }\r\n      });\r\n    },\r\n    onModalImgLoaded: () => {\r\n      return dispatch({\r\n        type: MODAL_IMG_LOADED,\r\n        payload: { modalDisplayStyle: 'block' }\r\n      });\r\n    },\r\n    onModalClosed: () => {\r\n      return dispatch({\r\n        type: MODAL_CLOSED\r\n      });\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(SelfiesModalImgWrapper);","import React from 'react';\r\n\r\nimport SelfiesGridItemWrapper from '../containers/SelfiesGridItemWrapper';\r\nimport SelfiesModalImgWrapper from '../containers/SelfiesModalImgWrapper';\r\n\r\nexport const SelfiesSection = (props) => {\r\n\r\n  // =============================================================================  \r\n  // A few properties here are conditional:\r\n  // - The section \"blurring\" effect is conditional based on the state.modalImgId value. \r\n  // - In addition to the grid I'll also render the modal componet ONLY if hte modalImgId is not ''\r\n  //   This will happen if the image is clicked on in the GridItem component in which case\r\n  //   the imgClickCallbackEventHandler() is invoked that changes the state.modalImgId value.\r\n  // =============================================================================  \r\n  return (\r\n    <React.Fragment>            \r\n        <div id=\"spinner-div\" className=\"lds-ripple\" style={{display:props.spinnerDisplay}}>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        <section className=\"grid-section middle-section\">\r\n          <div className={\"dynamic-grid \" + props.blurEffect} style={{visibility:props.gridVisibility}}>\r\n            {props.filteredGridItemsData.map((gridItemData, index) => {\r\n              return (<SelfiesGridItemWrapper id={gridItemData.id}\r\n                                              src={gridItemData.src}\r\n                                              caption={gridItemData.caption}\r\n                                              isLiked={gridItemData.isLiked}\r\n                                              likeCount={gridItemData.likeCount}\r\n                                              date={gridItemData.date}                                           \r\n                                              key={gridItemData.id} \r\n                                              imgRef={props.imgRefs[index]}/>);\r\n            })}\r\n          </div>\r\n\r\n          {props.isModalOn === true ? \r\n            <SelfiesModalImgWrapper filteredGridItemsData={props.filteredGridItemsData} /> : ''\r\n          }\r\n        </section>\r\n      </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { gridItems } from '../gridItemsData';\r\nimport { SelfiesSection } from '../components/SelfiesSection';\r\nimport { ALL_IMGS_LOADED } from '../constants';\r\n\r\nexport class SelfiesSectionWrapper extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // =============================================================================\r\n    // Intersection Observer API.\r\n    // To implement this functionality I'm taking these steps:\r\n    // 1. this.imgRefs is an array of refs that represents all images. \r\n    //    I need these handlers to make them observe scrolling events.\r\n    // 2. this.observer has 2 parameters:\r\n    //    - the callback function that filters the images\r\n    //    - the threshold parameters that triggers events when an image is 0.9 visible.\r\n    // 3. assocaiting the.imgRefs individual entries with the img is done in SelfiesGridItem\r\n    //    ref={props.imgRef}\r\n    // 4. instructing the imgRefs to observer scrolling events is done only after the \r\n    //    component is mount in componentDidMount. \r\n    // =============================================================================\r\n    this.imgRefs = gridItems.data.map(() => {\r\n      return React.createRef();\r\n    });\r\n\r\n    this.observer = new IntersectionObserver(function(entries) {\r\n      for (const entry of entries) {\r\n        if (entry['isIntersecting'] === true) {\r\n          if (entry['intersectionRatio'] >= 0.9) {\r\n            entry.target.style.filter = \"none\";\r\n          } else if (entry['intersectionRatio'] < 0.9) {\r\n            entry.target.style.filter = \"blur(4px) grayscale(100%)\";\r\n          }\r\n          console.log(entry);\r\n        }\r\n      }\r\n    }, { threshold: [0, 0.9] });\r\n\r\n  }\r\n\r\n  // =============================================================================\r\n  // - During the lengthy grid-images load time I display a spinner.\r\n  // - When all the images are loaded I dispatch ALL_IMGS_LOADED action that would turn\r\n  //   the grid from invisible to visible (the spinner gets hidden here.)\r\n  // =============================================================================\r\n  componentDidMount() {\r\n    var arrOfPromises = [];\r\n\r\n    gridItems.data.forEach((gridItem) => {\r\n      arrOfPromises.push(\r\n        new Promise((resolve, reject) => {\r\n          let img = new Image();\r\n          img.src = gridItem.src;\r\n          img.addEventListener('load', function() {\r\n            resolve(gridItem.id);\r\n          });\r\n        })\r\n      )\r\n    });\r\n\r\n    // When all images are loaded then only call onAllImgsLoaded that would make the grid visible.\r\n    Promise.all(arrOfPromises).then(values => {\r\n      this.props.onAllImgsLoaded();\r\n    });\r\n\r\n    // make the images observe scrolling events. \r\n    for (const imgRef of this.imgRefs) {\r\n      try {\r\n        this.observer.observe(imgRef.current);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  // =============================================================================  \r\n  // A few properties here are conditional:\r\n  // The gridVisibility is initially 'hidden' then 'visible' (see explanation above). \r\n  // That will happen only upon page load. When filter is applied the grid stays 'visible'\r\n  // =============================================================================  \r\n  render() {\r\n    let filteredGridItemsData = gridItems.data.filter((gridItem) => {\r\n      let boolean = gridItem.caption.toLowerCase().includes(this.props.filterString);\r\n      return boolean;\r\n    });\r\n\r\n    let spinnerDisplay = this.props.gridVisibility === 'hidden' ? 'inline-block' : 'none';\r\n\r\n    return (\r\n      <SelfiesSection filteredGridItemsData={filteredGridItemsData}\r\n                      spinnerDisplay={spinnerDisplay}\r\n                      blurEffect={this.props.blurEffect} \r\n                      gridVisibility = { this.props.gridVisibility }                      \r\n                      isModalOn={this.props.isModalOn}\r\n                      imgRefs={this.imgRefs} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n  return {\r\n    sortFilter: state.sortFilter,\r\n    filterString: state.filterString\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAllImgsLoaded: () => {\r\n      return dispatch({\r\n        type: ALL_IMGS_LOADED\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(SelfiesSectionWrapper)","import React from 'react';\r\n\r\nimport { SelfiesHeader } from './SelfiesHeader';\r\nimport SelfiesSectionWrapper from '../containers/SelfiesSectionWrapper';\r\nimport { Footer } from './Footer';\r\n\r\nexport const Selfies = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <main id=\"grid-section\">\r\n        <SelfiesHeader />\r\n        <SelfiesSectionWrapper blurEffect={props.blurEffect} \r\n                               gridVisibility={props.gridVisibility}\r\n                               isModalOn={props.isModalOn} />\r\n      </main>\r\n      <Footer />        \r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Selfies } from '../components/Selfies'\r\nimport { gridItems } from '../gridItemsData';\r\nimport { getCookie } from '../Utils.js';\r\n\r\nimport '../css/selfies.css';\r\n\r\nexport class SelfiesWrapper extends React.Component {\r\n  // =============================================================================\r\n  // The component needs to run the following 2 tasks before rendering:\r\n  // 1. Read the cookie to get the liked images.\r\n  // 2. Read the cookie to get the sort order. \r\n  // =============================================================================\r\n  constructor(props) {\r\n    super(props);\r\n    this.readLikesCookie();\r\n  }\r\n\r\n  // =============================================================================\r\n  // readLikesCookie would read 'likes' cookie and update the state.gridItems array accordingly. \r\n  // It would also increment the likeCount by one. \r\n  // =============================================================================\r\n  readLikesCookie = () => {\r\n    let likeArray = [];\r\n    let likeCookie = getCookie('likes');\r\n    if (likeCookie != null) {\r\n      likeArray = JSON.parse(likeCookie);\r\n    }\r\n\r\n    likeArray.forEach((id) => {\r\n      let gridElem = gridItems.data.find((elem) => {\r\n        return elem.id === id;\r\n      });\r\n      if (gridElem != null) {\r\n        gridElem.isLiked = true;\r\n        gridElem.likeCount++;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Selfies blurEffect={this.props.blurEffect} \r\n               gridVisibility={this.props.gridVisibility}\r\n               isModalOn={this.props.isModalOn} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sortFilter: state.sortFilter,\r\n    blurEffect: state.blurEffect,\r\n    gridVisibility: state.gridVisibility,\r\n    isModalOn: state.isModalOn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelfiesWrapper);","import React from 'react';\r\n\r\nexport const FansHeader = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Join My Fan Club!</h1>\r\n      <section id=\"form-header\">\r\n        <ul class=\"customed-ul\">\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>By joining my mailing list, you will get occasional e-mails.</li>\r\n\t        <li><i class=\"fa fa-circle li-icon\"></i>You'll receive exciting news about:\r\n          <ul class=\"news-about-ul\">\r\n            <li><i class=\"fa fa-circle\"></i>Special events</li>\r\n            <li><i class=\"fa fa-circle\"></i>My whereabouts</li>\r\n            <li><i class=\"fa fa-circle\"></i>New images</li>\r\n            <li><i class=\"fa fa-circle\"></i>All the news that's fit to print</li>\r\n          </ul>\r\n        \t</li>\r\n        \t<li><i class=\"fa fa-circle li-icon\"></i>You will not recieve more then one e-mail a week.</li>\r\n        \t<li><i class=\"fa fa-circle li-icon\"></i>I respect your privacy!</li>\r\n        </ul>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const FansSection = (props) => {\r\n  // =============================================================================\r\n  // - the 'for' attribute should be named 'htmlFor' in React.\r\n  // - the onDogBreedToggled state is maintained throughout the session.\r\n  //   as so, it should determine the 'checked' radio button of the dog-owner input.\r\n  // =============================================================================\r\n  let checkedYes = '';\r\n  let checkedNo = 'checked';\r\n  let dogBreedLabelClass = 'dog-breed-disabled';\r\n  let dogBreedInputDisabled = 'disabled';\r\n  if (props.dogBreedEnabled) {\r\n    checkedYes = 'checked';\r\n    checkedNo = '';\r\n    dogBreedLabelClass = 'dog-breed-enabled';\r\n    dogBreedInputDisabled = '';\r\n  }\r\n\r\n  let {name, email, phone, owner, breed, comment} = props.formValuesObject;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <label htmlFor=\"name-input\"><span className=\"required\">*</span>Name:</label>\r\n        <input type=\"text\" id=\"name-input\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email-input\"><span className=\"required\">*</span>Email:</label>\r\n        <input type=\"email\" id=\"email-input\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"tel-input\">Telephone:</label>\r\n        <input type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" id=\"tel-input\" />\r\n      </div>\r\n      <div id=\"phone-comment\">\r\n        <span>Format: xxx-xxx-xxxx</span>\r\n      </div>\r\n      <div> \r\n        <label htmlFor=\"radio-btns-div\">Dog Owner:</label>\r\n        <div id=\"radio-btns-div\">\r\n          <input type=\"radio\" name=\"dog-owner\" value=\"Yes\" onClick={props.onDogBreedToggled} checked={checkedYes} />Yes\r\n          <input type=\"radio\" name=\"dog-owner\" value=\"No\" onClick={props.onDogBreedToggled}  checked={checkedNo} />No\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label id=\"dog-breed-label\" className={dogBreedLabelClass}>Dog Breed:</label>\r\n        <input type=\"text\" id=\"dog-breed-input\" disabled={dogBreedInputDisabled} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"tel-input\">Comment:</label>\r\n        <textarea type=\"text\"></textarea>\r\n      </div>\r\n      <div className=\"button\">\r\n        <button className=\"btn btn-primary\" type=\"button\" onClick={props.validateFunc} ><i className=\"fa fa-paw\"></i>&nbsp;&nbsp;Confirm</button>\r\n      </div>\r\n\r\n      <section id=\"modal-section\" style={{display: props.formModalDisplayStyle}}>\r\n        <div id=\"modal-content\">\r\n          <span id=\"header\">Please review your data. Submit or keep editing. </span>\r\n          <img id=\"border\" src=\"images/border1.png\"></img>\r\n          <label class=\"title\">Names:</label><label class=\"value\" id=\"name-display\">{name}</label>\r\n          <label class=\"title\">Email:</label><label class=\"value\" id=\"email-display\">{email}</label>\r\n          <label class=\"title\">Telephone:</label><label class=\"value\" id=\"tel-display\">{phone}</label>\r\n          <label class=\"title\">Dog Owner:</label><label class=\"value\" id=\"owner-display\">{owner}</label>\r\n          <label class=\"title\">Dog Bread:</label><label class=\"value\" id=\"dog-breed-display\">{breed}</label>\r\n          <label class=\"title\">Comment:</label><label class=\"value\" id=\"comment-display\">{comment}</label>\r\n\r\n          <button id=\"modal-submit-btn\" class=\"btn btn-primary\" type=\"submit\"><i class=\"fa fa-paw\"></i>&nbsp;&nbsp;Submit</button>\r\n          <button id=\"modal-edit-btn\" class=\"btn btn-primary\" type=\"button\" onClick={props.onFormModalEdit}>&nbsp;&nbsp;Edit</button>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  DOG_BREED_TOGGLED,\r\n  FORM_CONFIRMED,\r\n  FORM_MODAL_EDIT\r\n} from '../constants';\r\nimport { FansSection } from '../components/FansSection';\r\n\r\nexport class FansSectionWrapper extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.form = React.createRef();\r\n    this.validate = this.validate.bind(this);\r\n    this.formValuesObject = {};\r\n  }\r\n\r\n  validate() {\r\n    let isValidForm = this.form.current.reportValidity();\r\n\r\n    if (isValidForm) {\r\n      this.formValuesObject.name = this.form.current.elements[0].value;\r\n      this.formValuesObject.email = this.form.current.elements[1].value;\r\n      this.formValuesObject.phone = this.form.current.elements[2].value;\r\n      this.formValuesObject.owner = this.form.current.elements[3].checked ? \"Yes\" : \"No\";\r\n      this.formValuesObject.breed = this.form.current.elements[5].value;\r\n      this.formValuesObject.comment = this.form.current.elements[6].value;\r\n      this.props.onFormConfirmed();\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"middle-section\">\r\n        <form action=\"https://zivisraeli.github.io/mia-redux/index.html\" method=\"get\" ref={this.form} >\r\n          <FansSection dogBreedEnabled={this.props.dogBreedEnabled} \r\n                       onDogBreedToggled={this.props.onDogBreedToggled}\r\n                       formModalDisplayStyle={this.props.formModalDisplayStyle}\r\n                       onFormModalEdit={this.props.onFormModalEdit}\r\n                       formValuesObject={this.formValuesObject}\r\n                       validateFunc={this.validate}\r\n                       />\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function(state) {\r\n  return {\r\n    dogBreedEnabled: state.dogBreedEnabled,\r\n    formModalDisplayStyle: state.formModalDisplayStyle\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDogBreedToggled: () => {\r\n      return dispatch({\r\n        type: DOG_BREED_TOGGLED\r\n      });\r\n    },\r\n\r\n    onFormConfirmed: () => {\r\n      return dispatch({\r\n        type: FORM_CONFIRMED,\r\n        payload: { formModalDisplayStyle: 'block' }\r\n      });\r\n    },\r\n\r\n    onFormModalEdit: () => {\r\n      return dispatch({\r\n        type: FORM_MODAL_EDIT,\r\n        payload: { formModalDisplayStyle: 'none' }\r\n      });\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(FansSectionWrapper);","import React from 'react';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport { FansHeader } from '../components/FansHeader';\r\nimport FansSectionWrapper from './FansSectionWrapper';\r\n\r\nimport '../css/fans.css';\r\n\r\n// =============================================================================\r\n//  Fans is more like a component and can be implements as a function. \r\n//  It doesn't need to be a container since it is stateless.\r\n//  However, I placed it here since semantically it's a container. \r\n//  It's the gateway to the page content.\r\n// =============================================================================\r\nexport class FansWrapper extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <main id=\"fan-section\">\r\n        <FansHeader />\r\n        <FansSectionWrapper />\r\n      </main>\r\n      <Footer />\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const KitbullVideo = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n\t      <h1>Kitbull / Pixar</h1> \r\n\t      <div id = \"iframe-wrapper\" >\r\n\t\t      <iframe src=\"https://www.youtube.com/embed/AZS5cgybKcI\"\r\n\t\t              frameBorder=\"0\" \r\n\t\t              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n\t\t              title=\"The Kitbull Movie\"\r\n\t\t              allowFullScreen>\r\n\t\t      </iframe> \r\n\t      </div>\r\n    \t</React.Fragment>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const KitbullSection = (props) => {\r\n  return (\r\n    <section id=\"kitbull-section\" className=\"middle-section\">\r\n\t      <hr/>\r\n\t      <i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pixar has a pretty impressive track record for making audiences cry, but it has truly outdone itself by achieving full-scale weeps in a matter of mere minutes with the animation studio's new short film, Kitbull. The film - a production of Pixar's new SparkShorts program - tells a tearjerking story of an \"unlikely connection that sparks between two creatures\" under dire circumstances. A fiercely independent stray kitten happens upon an abused Pitbull, and as director Rosana Sullivan said, \"together, they experience friendship for the first time.\"\r\n\t        <br/><br/>\r\n\t        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;It's simple and sweet, but - through a few startling scenes - it also makes a powerful statement about the treatment of animals, and it might even open up more meaningful conversations about the reputation of Pitbulls being an aggressive and dangerous breed.\r\n\t        <br/><br/>\r\n\t        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;At the end of this nine-minute video, you'll certainly find yourself wiping away tears, and regardless of whether you consider yourself a dog person or a cat person, it will reaffirm your love of all animals and make you hug your own pets a bit tighter tonight.\r\n\t        <br/><br/>\r\n\t      </i>\r\n\t      <span>Kate Schweitzer</span> / <a href=\"http://popsugar.com\" target=\"_blank\" rel=\"noopener noreferrer\">popsugar</a>\r\n      </section>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { KitbullVideo } from '../components/KitbullVideo';\r\nimport { KitbullSection } from '../components/KitbullSection';\r\nimport { Footer } from '../components/Footer';\r\n\r\nimport '../css/kitbull.css';\r\n\r\n// =============================================================================\r\n//  Kitbull is more like a component and can be implements as a function. \r\n//  It doesn't need to be a container since it is stateless.\r\n//  However, I placed it here since semantically it's a container. \r\n//  It's the gateway to the page content.\r\n// =============================================================================\r\nexport class KitbullWrapper extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>  \r\n      <main>\r\n        <KitbullVideo />\r\n        <KitbullSection />\r\n      </main>\r\n      <Footer />\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport { About } from './components/About'; \r\nimport HeaderImgWrapper from './containers/HeaderImgWrapper';\r\nimport SelfiesWrapper from './containers/SelfiesWrapper';\r\nimport { FansWrapper } from './containers/FansWrapper';\r\nimport { KitbullWrapper } from './containers/KitbullWrapper';\r\n\r\nimport './css/app.css';\r\nimport './css/mediaQueries.css'\r\nimport './css/spinner.css';\r\n \r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      currentMenuEntry : '/about',\r\n    }\r\n  }\r\n\r\n  menuClickEventHandler = (event) => {\r\n    this.setState({currentMenuEntry: event.target.id});\r\n  }\r\n\r\n  // =============================================================================\r\n  // - I need to determine the URL's context path so the app can run locally as well on mia-redux.\r\n  //   1. remove trailing '/'\r\n  //   2. if path starts with '/mia-redux' it's the context, otherwise it's ''.\r\n  //   3. if the context === path (meaning no menu entry was selected) set menuEntry to '/about'.\r\n  // - style the meny entry that is equals to menuEntry differently. \r\n  // =============================================================================\r\n  render() {\r\n    let pathName = window.location.pathname;\r\n    let lastPathNameChar = pathName.charAt(pathName.length-1);\r\n    pathName = (lastPathNameChar === '/') ? pathName.slice(0, -1) : pathName;\r\n    let contextPath = (pathName.startsWith(\"/mia-redux\")) ? \"/mia-redux\" : \"\";\r\n    let menuEntry = pathName === contextPath ? contextPath + '/about' : pathName;\r\n    let currentMenuEntryStyle = {textShadow: 'gray 1px 1px 4px'};\r\n\r\n    return (      \r\n       <Router>\r\n        <header>\r\n          <HeaderImgWrapper />\r\n          \r\n          <nav id=\"navbar\">\r\n            <Link to={`${contextPath}/about`} onClick={this.menuClickEventHandler} \r\n                              style={menuEntry.match('about') ? currentMenuEntryStyle : {}}>\r\n                              <span id=\"index\">About</span>\r\n            </Link>\r\n            <Link to={`${contextPath}/selfies`} onClick={this.menuClickEventHandler}\r\n                                style={menuEntry.match('selfies') ? currentMenuEntryStyle : {}}>\r\n                                <span id=\"selfies\">Selfies</span>\r\n            </Link>\r\n            <Link to={`${contextPath}/fans`} onClick={this.menuClickEventHandler}\r\n                             style={menuEntry.match('fans') ? currentMenuEntryStyle : {}}>\r\n                             <span id=\"fans\">Fan Club</span>\r\n            </Link>\r\n            <Link to={`${contextPath}/kitbull`} onClick={this.menuClickEventHandler}\r\n                                style={menuEntry.match('kitbull') ? currentMenuEntryStyle : {}}>\r\n                                <span id=\"kitbull\">Kitbull</span>\r\n            </Link>            \r\n          </nav>\r\n        </header>\r\n\r\n        <Switch>\r\n          <Route path={`${contextPath}/`} exact>\r\n            <About />\r\n          </Route> \r\n          <Route path={`${contextPath}/about`}>\r\n            <About />\r\n          </Route> \r\n          <Route path={`${contextPath}/selfies`}>\r\n            <SelfiesWrapper />\r\n          </Route>  \r\n          <Route path={`${contextPath}/fans`}>\r\n            <FansWrapper />\r\n          </Route> \r\n          <Route path={`${contextPath}/kitbull`}>\r\n            <KitbullWrapper />\r\n          </Route>         \r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App; ","import {\r\n  SORT_ORDER,\r\n  IMG_CLICK,\r\n  MODAL_CLOSED,\r\n  ALL_IMGS_LOADED,\r\n  MODAL_NEXT_BTN,\r\n  MODAL_PREV_BTN,\r\n  MODAL_IMG_LOADED,\r\n  DOG_BREED_TOGGLED,\r\n  HEADER_IMG_LOADED,\r\n  IMG_DRAG_ENTER,\r\n  IMG_DRAG_LEAVE,\r\n  IMG_DRAG_DROP,\r\n  FILTER_CHANGED,\r\n  IMG_TOUCH_END,\r\n  FORM_CONFIRMED,\r\n  FORM_MODAL_EDIT\r\n\r\n} from '../constants.js';\r\nimport { getCookie } from '../Utils.js';\r\nimport { gridItems } from '../gridItemsData';\r\n\r\n\r\n// =============================================================================\r\n// This function takes 2 parameters:\r\n//   1. attr: what attribute I wanna sort by (likes, caption, etc)\r\n//   2. direction: what direction the sort is (ascending or descending)\r\n// Javascript sort function take a \"compare\" function as a parameter. \r\n// =============================================================================\r\nconst sortGridItems = (sortAttr, sortDirection) => {\r\n  let sortedGridItems = gridItems.data.sort((item1, item2) => {\r\n    let retVal = 0;\r\n    if (sortAttr === \"captions\") {\r\n      retVal = item1.caption.toUpperCase() > item2.caption.toUpperCase() ? 1 : -1;\r\n    } else {\r\n      retVal = item1.likeCount > item2.likeCount ? 1 : -1\r\n    }\r\n    return retVal * sortDirection;\r\n  });\r\n\r\n  gridItems.data = sortedGridItems;\r\n}\r\n\r\n// =============================================================================\r\n// Upon SORT_ORDER action I map the sort value i.e. like+1, into 2 distinct values:\r\n// 1. the attr\r\n// 2. the direction\r\n// Then I sort the gridItems array\r\n// =============================================================================\r\nconst sortOptionsChanged = (sortValue) => {\r\n  let sortAttr = '';\r\n  let sortDirection = '';\r\n\r\n  switch (sortValue) {\r\n    case 'likes+1':\r\n      sortAttr = 'likes';\r\n      sortDirection = 1;\r\n      break;\r\n    case 'likes-1':\r\n      sortAttr = 'likes';\r\n      sortDirection = -1;\r\n      break;\r\n    case 'captions+1':\r\n      sortAttr = 'captions';\r\n      sortDirection = 1;\r\n      break;\r\n    case 'captions-1':\r\n      sortAttr = 'captions';\r\n      sortDirection = -1;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  sortGridItems(sortAttr, sortDirection);\r\n}\r\n\r\n// =============================================================================\r\n// Read the sort option element pointed to by the cookie.\r\n// The cookie string is the same as the options' id. \r\n// - read 'sort' cookie \r\n// - sort the gridItems array.\r\n// - return the sortCookie.\r\n// =============================================================================\r\nconst readSortCookie = () => {\r\n  let sortCookie = getCookie('sort');\r\n  if (sortCookie === null) {\r\n    sortCookie = 'likes-1'; // default value\r\n  }\r\n\r\n  let sortArr = sortCookie.match('(.*)([-+]1)');\r\n  let sortAttr = sortArr[1];\r\n  let sortDirection = sortArr[2];\r\n\r\n  sortGridItems(sortAttr, sortDirection);\r\n  return sortCookie;\r\n}\r\n\r\n// =============================================================================\r\n// When reading the headerImgId for the very first time, the cookie is empty.\r\n// In that case, use img id 'id02' as a default.\r\n// =============================================================================\r\nconst readHeaderImgCookie = () => {\r\n  let headerImgIdCookie = getCookie(\"headerImgId\");\r\n  let headerImgId = headerImgIdCookie === null ? 'id02' : headerImgIdCookie;\r\n  return headerImgId;\r\n}\r\n\r\n// =============================================================================\r\n// Initial states:\r\n// Here I read the sort and header-img cookies. It's the wrong location to place\r\n// this logic since I would rather keep the components business logic in their respective\r\n// location. However, since I need to set the store's state I decided to leave it here.\r\n// Me don't like it. At all. \r\n// =============================================================================\r\nconst initialState = {\r\n  sortFilter: readSortCookie(),\r\n  headerImgId: readHeaderImgCookie(),\r\n  headerImgBorderStyle: '',\r\n  headerImgClassName: 'header-img',\r\n  blurEffect: 'non-blurred',\r\n  gridVisibility: 'hidden',\r\n  isModalOn: false,\r\n  modalImgId: '',\r\n  modalDisplayStyle: 'none',\r\n  dogBreedEnabled: false,\r\n  filterString: ''\r\n}\r\n\r\n// =============================================================================\r\n// - This is a reducer, a pure function with (state, action) signature.\r\n// - Based on an action it transforms the state into the next state.\r\n// - To avoid mutating the original state I use Object.assign() that takes an \r\n//   empty object and a list of objects to be merged. \r\n// =============================================================================\r\nexport const mainReducer = (state = initialState, action) => {\r\n  let payload = action.payload;\r\n\r\n  switch (action.type) {\r\n    case SORT_ORDER:\r\n      sortOptionsChanged(payload);\r\n      return Object.assign({}, state, {\r\n        sortFilter: payload\r\n      });\r\n\r\n    case IMG_CLICK:\r\n      return Object.assign({}, state, {\r\n        modalImgId: payload,\r\n        blurEffect: 'blurred',\r\n        modalDisplayStyle: 'none',\r\n        isModalOn: true\r\n      });\r\n\r\n    case MODAL_CLOSED:\r\n      return Object.assign({}, state, {\r\n        modalImgId: '',\r\n        blurEffect: 'un-blurred',\r\n        isModalOn: false\r\n      });\r\n\r\n    case ALL_IMGS_LOADED:\r\n      return Object.assign({}, state, {\r\n        gridVisibility: 'visible'\r\n      });\r\n\r\n    case MODAL_PREV_BTN:\r\n    case MODAL_NEXT_BTN:\r\n      return Object.assign({}, state, {\r\n        modalImgId: payload.modalImgId,\r\n        modalDisplayStyle: payload.modalDisplayStyle\r\n      });\r\n\r\n    case MODAL_IMG_LOADED:\r\n      return Object.assign({}, state, {\r\n        modalDisplayStyle: payload.modalDisplayStyle,\r\n      });\r\n\r\n    case DOG_BREED_TOGGLED:\r\n      return Object.assign({}, state, {\r\n        dogBreedEnabled: !state.dogBreedEnabled,\r\n      });\r\n\r\n    case HEADER_IMG_LOADED:\r\n      return Object.assign({}, state, {\r\n        headerImgBorderStyle: payload,\r\n      });\r\n\r\n    case IMG_DRAG_ENTER:\r\n    case IMG_DRAG_LEAVE:\r\n      return Object.assign({}, state, {\r\n        headerImgClassName: payload,\r\n      });\r\n\r\n    case IMG_TOUCH_END:\r\n    case IMG_DRAG_DROP:\r\n      return Object.assign({}, state, {\r\n        headerImgId: payload.imgId,\r\n        headerImgClassName: payload.headerImgClassName\r\n      });\r\n\r\n    case FILTER_CHANGED:\r\n      return Object.assign({}, state, {\r\n        filterString: payload,\r\n      });\r\n\r\n    case FORM_CONFIRMED:\r\n    case FORM_MODAL_EDIT:\r\n      return Object.assign({}, state, {\r\n        formModalDisplayStyle: payload.formModalDisplayStyle,\r\n      });\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './App.js';\r\nimport { mainReducer } from './reducers/mainReducer.js';\r\n\r\n// =============================================================================\r\n// - The Redux store holds the state of the app.\r\n// - Upon creating the store the reducer is called for the first time. \r\n//   This is how the state initial value is set!!!\r\n// - Provider componet will take care passing down the 'store' to all compoenents \r\n//   instead of manually passing it down as a property.\r\n// =============================================================================\r\nconst store = createStore(mainReducer);\r\n\r\nReactDOM.render((<Provider store={store}>\r\n                   <App />\r\n                 </Provider>), \r\n                document.getElementById('app'));\r\n"],"sourceRoot":""}